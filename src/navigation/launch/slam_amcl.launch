<launch>
  <!--master auto="start"/-->

    <!--arg name="svo_file"              default="/home/silent/a.svo" /-->
    <arg name="svo_file"              default="" />

    <arg name="zed_id"                default="0" />
    <!-- GPU ID-->
    <arg name="gpu_id"                default="-1" />
    <!-- Definition coordinate frames -->
    <arg name="publish_tf"            default="false" />
    <arg name="odometry_frame"        default="odom" />
    <arg name="base_frame"            default="zed_center" />
    <arg name="camera_frame"          default="zed_left_camera" />
    <arg name="depth_frame"           default="zed_depth_camera" />
    <!-- Publish urdf zed -->
    <arg name="publish_urdf"          default="true" />
<group ns="zed">
    <node name="zed_wrapper_node" pkg="zed_wrapper" type="zed_wrapper_node" output="screen">

        <!-- publish odometry frame -->
        <param name="publish_tf"            value="$(arg publish_tf)" />
        <!-- Configuration frame camera -->    
        <param name="odometry_frame"        value="$(arg odometry_frame)" />
        <param name="base_frame"            value="$(arg base_frame)" />
        <param name="camera_frame"          value="$(arg camera_frame)" />
        <param name="depth_frame"           value="$(arg depth_frame)" />
    
        <!-- SVO file path -->
        <param name="svo_filepath"          value="$(arg svo_file)" />

        <!-- ZED parameters -->
        <param name="zed_id"                value="$(arg zed_id)" />

        <param name="resolution"            value="2" />
        <param name="quality"               value="2" />
        <param name="sensing_mode"          value="0" />
        <param name="frame_rate"            value="30" />
        <param name="odometry_db"           value="" />
        <param name="openni_depth_mode"     value="1" />
        <param name="gpu_id"                value="$(arg gpu_id)" />
        <param name="confidence"            value="80" />
        <param name="depth_stabilization"   value="1" />

        <!-- ROS topic names -->
        <param name="rgb_topic"             value="rgb/image_rect_color" />
        <param name="rgb_raw_topic"         value="rgb/image_raw_color" />
        <param name="rgb_cam_info_topic"    value="rgb/camera_info" />

        <param name="left_topic"            value="left/image_rect_color" />
        <param name="left_raw_topic"        value="left/image_raw_color" />
        <param name="left_cam_info_topic"   value="left/camera_info" />
    
        <param name="right_topic"           value="right/image_rect_color" />
        <param name="right_raw_topic"       value="right/image_raw_color" />
        <param name="right_cam_info_topic"  value="right/camera_info" />

        <param name="depth_topic"           value="depth/depth_registered" />
        <param name="depth_cam_info_topic"  value="depth/camera_info" />

        <param name="point_cloud_topic"     value="point_cloud/cloud_registered" />

        <param name="odometry_topic"        value="odom" />

        <!--remap from="zed_center" to ="base_frame"/-->

    </node>

    <!-- ROS URDF description of the ZED -->
    <group if="$(arg publish_urdf)">
        <param name="zed_description" textfile="$(find zed_wrapper)/urdf/zed.urdf" />
        <node name="zed_state_publisher" pkg="robot_state_publisher" type="state_publisher">
            <remap from="robot_description" to="zed_description" />
        </node>
    </group>

<!-- Depth_image to Laser_Scan -->
    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
            <param name="scan_height" value="50"/>
            <param name="output_frame_id" value="/zed_center"/>
            <param name="range_min" value="0.5"/>
            <param name="range_max" value="8"/>
            <remap from="image" to="/zed/depth/depth_registered"/>
	    <remap from="scan" to ="/scan"/>
     </node>
</group>

<node pkg="tf" type="static_transform_publisher" name="base_to_camera"
  args="0 0 0.3 0 0 0 1 base_frame zed_center 100" />

<!-- Laser Scan Match -->
<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">

    <param name="fixed_frame" value = "odom"/>
    <param name="base_frame" value="base_frame"/>
    <param name="use_alpha_beta" value="false"/>
    <param name="use_odom" value="false"/>
    <param name="use_imu" value="false"/>
    <param name="max_iterations" value="10"/>
    <param name="publish_pose" value="false"/>
    <param name="publish_tf" value="true"/>
    <param name="use_vel" value="false"/>
	
 </node>

  <!-- Map server -->
  <arg name="map_file" default="$(find navigation)/map/map-a-.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Place map frame at odometry frame -->
  <!--node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster"
      args="0 0 0 0 0 0 map odom 100"/-->

  <!-- Localization -->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <remap from="scan" to="/scan"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="odom_model_type" value="diff-corrected"/>
    <param name="base_frame_id" value="base_frame"/>
    <param name="update_min_d" value="0.5"/>
    <param name="update_min_a" value="1.0"/>
    
    <param name="save_pose_rate" value="10.0"/>
    <param name="use_map_topic" value="true"/>
    <param name="first_map_only" value="true"/>
    
    
    <param name="min_particles" value="20"/>
    <param name="max_particles" value="400"/>
    <param name="tf_broadcast" value="true"/>
  </node>
  <!--include file="$(find amcl)/examples/amcl_omni.launch"/-->



  <!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navigation)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find navigation)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find navigation)/config/dwa_local_planner_params.yaml" command="load" />
    
    <!--param name="recovery_behavior_enabled" value="false"/-->
    <!--param name="clearing_rotation_allowed" value="false"/-->
    <param name="controller_frequency" value="10"/>
    
    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="/zed/odom"/>
    <remap from="scan" to="/scan"/>
    
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>
    <!--param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="3.1"/>
    <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="0.2"/-->
  </node>

<!--RVIZ launch -->
<!--node pkg="rviz" type="rviz" name="rviz" args="-d $(find navigation)/rviz/amcl.rviz"/-->

</launch>


